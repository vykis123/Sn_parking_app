<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_1230661_parking.ScriptedRestParkingRequestUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ScriptedRestParkingRequestUtil</name>
        <script><![CDATA[var ScriptedRestParkingRequestUtil = Class.create();
ScriptedRestParkingRequestUtil.prototype = {
    initialize: function() {},

    /**
     * Builds response for get list method
     * 
     * @param {number} queryLimit
     * @param {string} userSisId
     * 
     * @return {Array.<{requestNumber: string, requestor: string, parking: string, status: string, carPalte: string, reservatioDate: string}>}
     */
    buildGetListResponse: function(userSysId, queryLimit) {
        const parkingRequestGr = new GlideRecordSecure("x_1230661_parking_requests");
        parkingRequestGr.addQuery("requested_by", userSysId)
        parkingRequestGr
            .addQuery("reservation_date", gs.beginningOfToday())
            .addOrCondition("reservation_date", ">", gs.beginningOfToday());
        parkingRequestGr.orderBy("reservation_date");
        parkingRequestGr.setLimit(queryLimit);
        parkingRequestGr.query();

        const requestListArray = [];

        while (parkingRequestGr.next()) {
            const obj = {};
			
            obj.requestNumber = parkingRequestGr.number
            obj.requestor = parkingRequestGr.requested_by.user_name
            obj.parking = parkingRequestGr.parking_name.name
            obj.status = parkingRequestGr.approve_status
            obj.carPalte = parkingRequestGr.plate_number
            obj.reservationDate = parkingRequestGr.reservation_date

            if (parkingRequestGr.rejection_reason) {
                obj.rejection = parkingRequestGr.rejection_reason;
            }
            if (parkingRequestGr.additional_details) {
                obj.additionalInfo = parkingRequestGr.additional_details.toString();
            }

            requestListArray.push(obj);
        }

        return requestListArray;
    },

    type: 'ScriptedRestParkingRequestUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-26 11:57:03</sys_created_on>
        <sys_id>36602d954783021086ea87fe016d4320</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>ScriptedRestParkingRequestUtil</sys_name>
        <sys_package display_value="parking" source="x_1230661_parking">2cd57ac74742021086ea87fe016d43c4</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="parking">2cd57ac74742021086ea87fe016d43c4</sys_scope>
        <sys_update_name>sys_script_include_36602d954783021086ea87fe016d4320</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-26 12:29:08</sys_updated_on>
    </sys_script_include>
</record_update>
